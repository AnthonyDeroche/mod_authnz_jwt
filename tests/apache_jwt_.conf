<VirtualHost *:80>
    ServerName testjwt.local
    DocumentRoot /var/www/testjwt/
    
    AuthJWTExpDelay 1800
    AuthJWTNbfDelay 0
    AuthJWTIss testjwt.local
    AuthJWTAud tests
    AuthJWTLeeway 10

    LogLevel auth_jwt:debug

    #AliasMatch secured$ /var/www/testjwt/index.html

    <Directory /var/www/testjwt/>
        AllowOverride None
        Options -Indexes
        Require all granted
    </Directory>

    Alias "/HS256/secured" "/var/www/testjwt"

    <Location "/HS256/secured">
        AuthJWTSignatureSharedSecret bnVsbGNoYXIAc2VjcmV0
        AuthJWTSignatureAlgorithm HS256
        AllowOverride None
        Options -Indexes
        AuthType jwt
        AuthName "private area"
        Require valid-user
    </Location>

    # first segment define algorithm
    #<Location "/HS256">
    #    AuthJWTSignatureSharedSecret bnVsbGNoYXIAc2VjcmV0
    #    AuthJWTSignatureAlgorithm HS256
    #</Location>

    <Location "/HS384">
        AuthJWTSignatureSharedSecret bnVsbGNoYXIAc2VjcmV0
        AuthJWTSignatureAlgorithm HS384
    </Location>

    <Location "/HS512">
        AuthJWTSignatureSharedSecret bnVsbGNoYXIAc2VjcmV0
        AuthJWTSignatureAlgorithm HS512
    </Location>


    <Location "/RS256">
        AuthJWTSignatureAlgorithm RS256
        AuthJWTSignaturePublicKeyFile /opt/mod_jwt_tests/rsa-pub.pem
        AuthJWTSignaturePrivateKeyFile /opt/mod_jwt_tests/rsa-priv.pem
    </Location>

    <Location "/RS384">
        AuthJWTSignatureAlgorithm RS384
        AuthJWTSignaturePublicKeyFile /opt/mod_jwt_tests/rsa-pub.pem
        AuthJWTSignaturePrivateKeyFile /opt/mod_jwt_tests/rsa-priv.pem
    </Location>

    <Location "/RS512">
        AuthJWTSignatureAlgorithm RS512
        AuthJWTSignaturePublicKeyFile /opt/mod_jwt_tests/rsa-pub.pem
        AuthJWTSignaturePrivateKeyFile /opt/mod_jwt_tests/rsa-priv.pem
    </Location>

    <Location "/ES256">
        AuthJWTSignatureAlgorithm ES256
        AuthJWTSignaturePublicKeyFile /opt/mod_jwt_tests/ec-pub.pem
        AuthJWTSignaturePrivateKeyFile /opt/mod_jwt_tests/ec-priv.pem
    </Location>

    <Location "/ES384">
        AuthJWTSignatureAlgorithm ES384
        AuthJWTSignaturePublicKeyFile /opt/mod_jwt_tests/ec-pub.pem
        AuthJWTSignaturePrivateKeyFile /opt/mod_jwt_tests/ec-priv.pem
    </Location>

    <Location "/ES512">
        AuthJWTSignatureAlgorithm ES512
        AuthJWTSignaturePublicKeyFile /opt/mod_jwt_tests/ec-pub.pem
        AuthJWTSignaturePrivateKeyFile /opt/mod_jwt_tests/ec-priv.pem
    </Location>

    # second segment define delivery type/auth type
    <LocationMatch "^/(.*)/cookie">
        AuthJWTDeliveryType Cookie
        AuthType jwt-cookie
    </LocationMatch>

    <LocationMatch "^/(.*)/json">
        AuthJWTDeliveryType JSON
        AuthType jwt-json
    </LocationMatch>

    <LocationMatch "^/(.*)/both">
        AuthJWTDeliveryType JSON
        AuthType jwt
    </LocationMatch>

    # end segment define login or access
    <LocationMatch "jwt_login$">
        SetHandler jwt-login-handler
        AuthJWTProvider file
        AuthUserFile /var/www/jwt.htpasswd
    </LocationMatch>

    #<LocationMatch "secured$">
    #    AuthType jwt

    #    AllowOverride None
    #    Options -Indexes
    #    AuthName "private area"
    #    Require valid-user
    #</LocationMatch>

    <Location "/jwt_login_cookie_hs_custom_name">
    AuthJWTDeliveryType Cookie
    AuthJWTCookieName CustomCookie
        AuthJWTSignatureAlgorithm HS256
        AuthJWTSignatureSharedSecret bnVsbGNoYXIAc2VjcmV0
        SetHandler jwt-login-handler
        AuthJWTProvider file
        AuthUserFile /var/www/jwt.htpasswd
    </Location>

    <Location "/jwt_login_cookie_hs_custom_attr">
        AuthJWTDeliveryType Cookie
        AuthJWTCookieAttr path=/secure;CustomAttr
        AuthJWTSignatureAlgorithm HS256
        AuthJWTSignatureSharedSecret bnVsbGNoYXIAc2VjcmV0
        SetHandler jwt-login-handler
        AuthJWTProvider file
        AuthUserFile /var/www/jwt.htpasswd
    </Location>

</VirtualHost>
